{"version":3,"sources":["components/Contacts/Contacts.module.css","components/Filter/Filter.module.css","redux/contacts/contacts-actions.js","redux/contacts/contacts-reducer.js","redux/store.js","components/Form/ContactForm.js","components/Filter/Filter.js","components/Contacts/Contacts.js","App.js","index.js","components/Form/ContactForm.module.css"],"names":["module","exports","addContact","createAction","deleteContact","changeFilter","initialState","items","id","name","number","filter","createReducer","actions","state","payload","some","item","includes","alert","_","combineReducers","persistConfig","key","storage","blacklist","persistedReducer","persistReducer","contactsReducer","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","devTools","process","persistor","persistStore","ContactForm","nameId","uuidv4","numberId","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","contact","props","addNewContact","reset","onSubmit","this","className","s","form","htmlFor","label","type","pattern","title","required","onChange","input","button","Component","connect","dispatch","contactsActions","target","console","log","getVisibleContacts","contacts","normalizedFilter","toLowerCase","onDelete","list","map","onClick","App","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.22a75548.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Contacts_list__2APZu\",\"item\":\"Contacts_item__3il9Q\",\"button\":\"Contacts_button__3at7j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__2wZGC\",\"input\":\"Filter_input__lN1Fk\"};","// import { types} from './contacts-types'\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\n\r\nconst addContact = createAction('contacts/add');\r\n// const addContact = (contact) => ({\r\n//     type: types.ADD,\r\n//     payload: contact,\r\n// });\r\nconst deleteContact = createAction('contacts/delete');\r\n// const deleteContact = (id) =>({\r\n//     type: types.DELETE,\r\n//     payload: id,\r\n// });\r\nconst changeFilter = createAction('contacts/changeFilter');\r\n// const changeFilter = (value) => ({\r\n//     type: types.CHANGE_FILTER,\r\n//     payload: value\r\n// });\r\nexport default { addContact, deleteContact, changeFilter }\r\n","import { combineReducers } from \"redux\";\r\n// import {types} from './contacts-types';\r\nimport actions from './contacts-actions'\r\nimport { createReducer } from \"@reduxjs/toolkit\";\r\n\r\nconst initialState = {\r\n    contacts: {\r\n        items: [\r\n    {id: 'id-1', name: 'Rosie Simpson', number: '459-12-56'},\r\n    {id: 'id-2', name: 'Hermione Kline', number: '443-89-12'},\r\n    {id: 'id-3', name: 'Eden Clements', number: '645-17-79'},\r\n    {id: 'id-4', name: 'Annie Copeland', number: '227-91-26'},\r\n    ],\r\n        filter: ''\r\n    },\r\n}\r\nconst items = createReducer(initialState.contacts.items,{\r\n    [actions.addContact]: (state, {payload}) => {\r\n        if(\r\n            state.some(item=>item.name.includes(payload.name))){\r\n                return alert(`${payload.name} is already in contacts`)\r\n            }\r\n        \r\n    return [...state, payload]\r\n    } ,\r\n    [actions.deleteContact]: (state, {payload}) => state.filter(({id}) => id !== payload),\r\n})\r\n// const items = (state = initialState.contacts.items, {type, payload}) =>{\r\n//     switch(type){\r\n//         case types.ADD :\r\n//             return [...state, payload];\r\n//         case types.DELETE:\r\n//             return state.filter(({id}) => id !== payload);\r\n\r\n//         default:\r\n//             return state;\r\n//     }\r\n// }\r\nconst filter = createReducer(initialState.contacts.filter,{\r\n    [actions.changeFilter]:( _, {payload}) => payload,\r\n}\r\n)\r\n// const filter = (state = initialState.contacts.filter, {type, payload}) => {\r\n//     switch(type){\r\n//         case types.CHANGE_FILTER:\r\n//            return payload;\r\n//         default:  \r\n//            return state;\r\n//     }\r\n   \r\n// }\r\n\r\nexport default combineReducers({\r\n    items,\r\n    filter,\r\n})","// import { applyMiddleware, createStore } from \"redux\";\r\nimport logger from \"redux-logger\";\r\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\r\n// import { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport contactsReducer from \"./contacts/contacts-reducer\";\r\nimport { persistStore, \r\n    persistReducer,\r\n    FLUSH,\r\n    REHYDRATE,\r\n    PAUSE,\r\n    PERSIST,\r\n    PURGE,\r\n    REGISTER } from \"redux-persist\";\r\nimport storage from 'redux-persist/lib/storage';\r\n\r\n// const store = createStore(contactsReducer, composeWithDevTools(applyMiddleware()));\r\nconst persistConfig = {\r\n    key: 'contacts',\r\n    storage,\r\n    blacklist: ['filter']\r\n  }\r\nconst persistedReducer = persistReducer(persistConfig, contactsReducer );\r\n\r\nconst middleware = [...getDefaultMiddleware({\r\n        serializableCheck: {\r\n            ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER]\r\n          }\r\n}), \r\n        logger];\r\n\r\nconst store = configureStore({\r\n    reducer: persistedReducer,\r\n    middleware,\r\n    devTools: process.env.NODE_ENV === 'development',\r\n},\r\n)\r\nconst persistor = persistStore(store);\r\n\r\nexport default { store, persistor };","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { v4 as uuidv4 } from 'uuid';\nimport contactsActions from '../../redux/contacts/contacts-actions'\nimport s from './ContactForm.module.css';\nimport PropTypes from 'prop-types';\n\n\nclass ContactForm extends Component {\n  nameId = uuidv4();\n  numberId = uuidv4();\n\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const contact = {\n      id: uuidv4(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n\n    this.setState({ contact });\n    this.props.addNewContact(contact);\n    this.reset();\n  };\n  reset = () => {\n    this.setState({ name: '', number: '' });\n  };\n  render() {\n    return (\n      <form onSubmit={this.handleSubmit} className={s.form}>\n        <label htmlFor={this.nameId} className={s.label}>\n          Name\n          <input\n            type=\"text\"\n            name=\"name\"\n            id={this.nameId}\n            value={this.state.name}\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n            required\n            onChange={this.handleChange}\n            className={s.input}\n          />\n        </label>\n        <label htmlFor={this.numberId} className={s.label}>\n          Number\n          <input\n            type=\"tel\"\n            name=\"number\"\n            id={this.numberId}\n            value={this.state.number}\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n            required\n            onChange={this.handleChange}\n            className={s.input}\n          />\n        </label>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nContactForm.propTypes = {\n  addNewContact: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = dispatch => ({\n  addNewContact:(contact) => dispatch (contactsActions.addContact(contact))\n})\n\nexport default connect(null, mapDispatchToProps)(ContactForm);","import PropTypes from 'prop-types';\nimport s from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\n function Filter({ onChange, value }) {\n   console.log(value);\n  return (\n    <div>\n      <label className={s.label}>Find contacts by name</label>\n      <input\n        type=\"tel\"\n        name=\"filter\"\n        value={value}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        onChange={onChange}\n        className={s.input}\n      />\n    </div>\n  );\n}\nFilter.propTypes = {\n  onChange: PropTypes.func.isRequired,\n  value: PropTypes.string,\n};\n\n\nconst mapStateToProps = state => ({\n  value: state.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: (e) => dispatch(contactsActions.changeFilter(e.target.value))\n});\nexport default connect(mapStateToProps,mapDispatchToProps)(Filter)","import { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport s from './Contacts.module.css';\nimport contactsActions from '../../redux/contacts/contacts-actions';\n\n function Contacts({ contacts, onDelete }) {\n  return (\n    <ul className={s.list}>\n      {contacts.map(({ name, id, number }) => (\n        <li key={id} className={s.item}>\n          {name}: {number}\n          <button\n            onClick={() => onDelete(id)}\n            type=\"button\"\n            className={s.button}\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n}\nContacts.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string,\n      id: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n  onDelete: PropTypes.func.isRequired,\n};\n\nconst getVisibleContacts = (contacts, filter) => {\n\n  const normalizedFilter = filter.toLowerCase();\n console.log(contacts);\n  return contacts.filter((contact) =>\n    contact.name.toLowerCase().includes(normalizedFilter),\n  );\n};\n\nconst mapStateToProps = (  { items, filter }  )  => ({\n \ncontacts: getVisibleContacts(items, filter),\n  // const visibleContacts = getVisibleContacts(contacts,filter);\n\n  // return {\n  //   contacts: visibleContacts,\n  // }\n});\n\nconst mapDispatchToProps = dispatch =>({\n  onDelete: id => dispatch(contactsActions.deleteContact(id)),\n})\nexport default connect(mapStateToProps,mapDispatchToProps)(Contacts);","import './App.css';\nimport  ContactForm  from './components/Form/ContactForm';\nimport Filter  from './components/Filter/Filter';\nimport  Contacts  from './components/Contacts/Contacts';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1 className=\"title\">Phonebook</h1>\n      <ContactForm />\n      <h2 className=\"title\">Contacts</h2>\n      <Filter />\n      <Contacts/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from 'react-redux';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store'\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n    </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1uLiP\",\"label\":\"ContactForm_label__OTeqN\",\"input\":\"ContactForm_input__3YQqt\",\"button\":\"ContactForm_button__3kmTD\"};"],"sourceRoot":""}